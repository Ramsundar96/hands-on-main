# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # Default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $aggregateRootRepository: '@EventSauce\EventSourcing\AggregateRootRepository'

    # Makes classes in src/ available to be used as services
    # This creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # Other existing services
    EventSauce\IdEncoding\StringIdEncoder: ~

    EventSauce\EventSourcing\Serialization\MessageSerializer:
        class: EventSauce\EventSourcing\Serialization\ConstructingMessageSerializer

    EventSauce\EventSourcing\MessageRepository:
        class: EventSauce\MessageRepository\DoctrineMessageRepository\DoctrineMessageRepository
        arguments:
            $tableName: 'bank_account_event_store'
            $eventIdEncoder: '@EventSauce\IdEncoding\StringIdEncoder'
            $aggregateRootIdEncoder: '@EventSauce\IdEncoding\StringIdEncoder'

    EventSauce\EventSourcing\MessageDispatcher:
        class: EventSauce\EventSourcing\SynchronousMessageDispatcher
        arguments:
            $consumers:
                - '@App\Infrastructure\Projector\PersistBankAccountProjectionOnBankAccountOpenedProjector'
                - '@App\Infrastructure\Projector\PersistBankAccountProjectionOnMoneyDepositedProjector'
                - '@App\Infrastructure\Projector\PersistBankAccountProjectionOnMoneyWithdrawnProjector'
                - '@App\Infrastructure\Projector\PersistBankAccountProjectionOnOverdraftUsedProjector'

    EventSauce\EventSourcing\AggregateRootRepository:
        class: EventSauce\EventSourcing\EventSourcedAggregateRootRepository
        arguments:
            $aggregateRootClassName: App\Domain\BankAccount

